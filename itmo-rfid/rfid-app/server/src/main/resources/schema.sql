CREATE TABLE IF NOT EXISTS doors
(
    door_id                    BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    door_required_access_level INTEGER NOT NULL,
    CONSTRAINT pk_doors PRIMARY KEY (door_id)
);

CREATE TABLE IF NOT EXISTS credentials
(
    credential_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    rfid_uid      BIGINT                                  NOT NULL,
    is_blocked    BOOLEAN DEFAULT TRUE,
    CONSTRAINT pk_credential PRIMARY KEY (credential_id),
    CONSTRAINT uq_rfid_uid UNIQUE (rfid_uid)
);

CREATE TABLE IF NOT EXISTS roles
(
    role_id      BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    role_name    VARCHAR(255) NOT NULL,
    access_level BIGINT       NOT NULL,
    CONSTRAINT pk_roles PRIMARY KEY (role_id),
    CONSTRAINT uq_role_name UNIQUE (role_name),
    CONSTRAINT uq_access_level UNIQUE (access_level)
);

CREATE TABLE IF NOT EXISTS visitors
(
    visitor_id    BIGINT                      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    first_name    VARCHAR(255)                NOT NULL,
    last_name     VARCHAR(255)                NOT NULL,
    birthday      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    email         VARCHAR(255)                NOT NULL,
    credential_id BIGINT,
    role_id       BIGINT,
    is_blocked    BOOLEAN                     NOT NULL,
    CONSTRAINT pk_visitors PRIMARY KEY (visitor_id),
    CONSTRAINT uq_email UNIQUE (email),
    CONSTRAINT fk_visitors_credentials FOREIGN KEY (credential_id) REFERENCES credentials (credential_id),
    CONSTRAINT fk_visitors_roles FOREIGN KEY (role_id) REFERENCES roles (role_id)
);

CREATE TABLE IF NOT EXISTS admins
(
    admin_id       BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    admin_username VARCHAR(255) NOT NULL,
    CONSTRAINT pk_admins PRIMARY KEY (admin_id)
);

CREATE TABLE IF NOT EXISTS visits
(
    visit_id       BIGINT                      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    visit_datetime TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    visitor_id     BIGINT                      NOT NULL,
    credential_id  BIGINT                      NOT NULL,
    is_passed      BOOLEAN                     NOT NULL,
    door_id        BIGINT                      NOT NULL,
    CONSTRAINT pk_visits PRIMARY KEY (visit_id),
    CONSTRAINT fk_visits_visitors FOREIGN KEY (visit_id) REFERENCES visitors (visitor_id),
    CONSTRAINT fk_visits_credentials FOREIGN KEY (credential_id) REFERENCES credentials (credential_id),
    CONSTRAINT fk_visits_doors FOREIGN KEY (door_id) REFERENCES doors (door_id)
);